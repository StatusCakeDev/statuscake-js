/* tslint:disable */
/* eslint-disable */
/*
 * StatusCake API
 *
 * Copyright (c) 2023
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * API version: 1.1.0
 * Contact: support@statuscake.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

import { exists, mapValues } from '../runtime';
import {
  UptimeTestStatus,
  UptimeTestStatusFromJSON,
  UptimeTestStatusFromJSONTyped,
  UptimeTestStatusToJSON,
} from './UptimeTestStatus';

/**
 *
 * @export
 * @interface UptimeTestPeriod
 */
export interface UptimeTestPeriod {
  /**
   * When the status period was created (RFC3339 format)
   * @type {Date}
   * @memberof UptimeTestPeriod
   */
  createdAt: Date;
  /**
   * Status period duration (ms)
   * @type {number}
   * @memberof UptimeTestPeriod
   */
  duration?: number;
  /**
   * When the status period ended (RFC3339 format)
   * @type {Date}
   * @memberof UptimeTestPeriod
   */
  endedAt?: Date;
  /**
   *
   * @type {UptimeTestStatus}
   * @memberof UptimeTestPeriod
   */
  status: UptimeTestStatus;
}

export function UptimeTestPeriodFromJSON(json: any): UptimeTestPeriod {
  return UptimeTestPeriodFromJSONTyped(json, false);
}

export function UptimeTestPeriodFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UptimeTestPeriod {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    createdAt: new Date(json['created_at']),
    duration: !exists(json, 'duration') ? undefined : json['duration'],
    endedAt: !exists(json, 'ended_at') ? undefined : new Date(json['ended_at']),
    status: UptimeTestStatusFromJSON(json['status']),
  };
}

export function UptimeTestPeriodToJSON(value?: UptimeTestPeriod | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    created_at: value.createdAt.toISOString(),
    duration: value.duration,
    ended_at:
      value.endedAt === undefined ? undefined : value.endedAt.toISOString(),
    status: UptimeTestStatusToJSON(value.status),
  };
}
